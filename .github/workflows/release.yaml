name: Create Test ArgoCD release
# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches: [release-2.0-arm-gh]
  pull_request:
    branches: [release-2.0-arm-gh]
jobs:
  prepare-release:
    name: Build linux/${{ matrix.arch }} docker image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
          - arm
    env:
      # The name of the tag as supplied by the GitHub event
      SOURCE_TAG: ${{ github.ref }}
      # The image namespace where Docker image will be published to
      IMAGE_NAMESPACE: quay.io/argoproj
      # Whether to create & push image and release assets
      DRY_RUN: false
      # Whether a draft release should be created, instead of public one
      DRAFT_RELEASE: false
      # Whether to update homebrew with this release as well
      # Set RELEASE_HOMEBREW_TOKEN secret in repository for this to work - needs
      # access to public repositories
      UPDATE_HOMEBREW: false
      # Name of the GitHub user for Git config
      GIT_USERNAME: argo-bot
      # E-Mail of the GitHub user for Git config
      GIT_EMAIL: argoproj@gmail.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: '1.16.4'

      - name: Setup Git author information
        run: |
          set -ue
          git config --global user.email "${GIT_EMAIL}"
          git config --global user.name "${GIT_USERNAME}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build linux/${{ matrix.arch }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: linux/${{ matrix.arch }}
          build-args: |
            BUILD_ALL_CLIS=${{ matrix.arch == 'amd64' }}
            INSTALL_KSONNET=${{ matrix.arch == 'amd64' }}
          push: false
          tags: |
            alinbalutoiu/argocd:linux-${{ matrix.arch }}
